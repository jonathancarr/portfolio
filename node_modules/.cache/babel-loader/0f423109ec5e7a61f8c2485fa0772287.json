{"ast":null,"code":"var _jsxFileName = \"/home/jonathan/portfolio/src/Background.js\";\nimport React, { useRef, useLayoutEffect, useEffect } from 'react';\n\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n}\n\nconst describeArc = (x, y, radius, startAngle, endAngle) => {\n  var start = polarToCartesian(x, y, radius, endAngle);\n  var end = polarToCartesian(x, y, radius, startAngle);\n  var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n  var d = [\"M\", start.x, start.y, \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y].join(\" \");\n  return d;\n};\n\nconst Background = ({\n  scrollY\n}) => {\n  const backgroundRef = useRef(null);\n  const rocketRef = useRef(null);\n  const pathRef = useRef(null);\n  const circleRef = useRef(null);\n  const radiusRef = useRef(null);\n  const arcRef = useRef(null);\n  const textRef = useRef(null); // console.log(scrollY);\n\n  useLayoutEffect(() => {\n    const width = backgroundRef.current.clientWidth;\n    const radius = width / 2;\n    radiusRef.current = radius;\n    const angle = 90;\n    const circumference = 2 * Math.PI * radius;\n    const arcDistance = circumference * angle / 360;\n    arcRef.current = arcDistance;\n    console.log(arcDistance);\n  }, []);\n  useEffect(() => {\n    if (!arcRef.current) return;\n    const angle = Math.min(90 * scrollY / arcRef.current, 90);\n    const extraDist = Math.max(0, scrollY - arcRef.current);\n    console.log(extraDist);\n    const xPos = radiusRef.current * Math.sin(angle * Math.PI / 180);\n    const height = backgroundRef.current.clientHeight;\n    const textOffset = -(radiusRef.current - radiusRef.current * Math.cos(angle * Math.PI / 180));\n    console.log(xPos);\n    rocketRef.current.style.transform = `translate(${xPos}px, 50%)rotate(${angle}deg)`;\n    textRef.current.style.transform = `translateY(${textOffset - extraDist}px)`;\n    pathRef.current.style.transform = `translateY(${radiusRef.current + textOffset - extraDist}px)`;\n    circleRef.current.style.d = describeArc(0, backgroundRef.current.height / 2 + radiusRef.current, radiusRef.current, 0, 90);\n    console.log(angle);\n  }, [scrollY]);\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"background\",\n    ref: backgroundRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    ref: textRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    y: \"45%\",\n    x: \"50%\",\n    textAnchor: \"middle\",\n    alignmentBaseline: \"central\",\n    fill: \"white\",\n    fontSize: \"36\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Jonathan Carr\"), /*#__PURE__*/React.createElement(\"text\", {\n    y: \"50%\",\n    x: \"50%\",\n    textAnchor: \"middle\",\n    alignmentBaseline: \"central\",\n    fill: \"white\",\n    fontSize: \"18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"And some words about me!\")), /*#__PURE__*/React.createElement(\"rect\", {\n    className: \"rocket\",\n    width: 100,\n    height: 25,\n    fill: \"white\",\n    ref: rocketRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    ref: pathRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"white\",\n    opacity: \"10%\",\n    strokeWidth: \"4\",\n    ref: circleRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"50%\",\n    x2: \"50%\",\n    y1: \"50%\",\n    y2: \"5000px\",\n    stroke: \"white\",\n    opacity: \"10%\",\n    strokeWidth: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Background;","map":{"version":3,"sources":["/home/jonathan/portfolio/src/Background.js"],"names":["React","useRef","useLayoutEffect","useEffect","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","describeArc","startAngle","endAngle","start","end","largeArcFlag","d","join","Background","scrollY","backgroundRef","rocketRef","pathRef","circleRef","radiusRef","arcRef","textRef","width","current","clientWidth","angle","circumference","arcDistance","console","log","min","extraDist","max","xPos","height","clientHeight","textOffset","style","transform"],"mappings":"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","sourcesContent":["import React, { useRef, useLayoutEffect, useEffect } from 'react';\n\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees-90) * Math.PI / 180.0;\n  \n    return {\n      x: centerX + (radius * Math.cos(angleInRadians)),\n      y: centerY + (radius * Math.sin(angleInRadians))\n    };\n  }\n\nconst describeArc = (x, y, radius, startAngle, endAngle) =>{\n\n    var start = polarToCartesian(x, y, radius, endAngle);\n    var end = polarToCartesian(x, y, radius, startAngle);\n\n    var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n\n    var d = [\n        \"M\", start.x, start.y, \n        \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y\n    ].join(\" \");\n\n    return d;       \n}\n\nconst Background = ({scrollY}) => {\n    const backgroundRef = useRef(null);\n    const rocketRef = useRef(null);\n    const pathRef = useRef(null);\n    const circleRef = useRef(null);\n\n    const radiusRef = useRef(null);\n    const arcRef = useRef(null);\n    const textRef=useRef(null);\n    // console.log(scrollY);\n\n    useLayoutEffect(() => {\n        const width = backgroundRef.current.clientWidth;\n        const radius = width / 2;\n        radiusRef.current = radius;\n        const angle = 90;\n        const circumference = 2 * Math.PI * radius;\n        const arcDistance = circumference * angle / 360;\n        arcRef.current = arcDistance;\n        console.log(arcDistance) \n    }, []);\n\n    useEffect(() => {\n        if (!arcRef.current) return;\n    \n        const angle = Math.min(90 * scrollY / arcRef.current, 90)\n        const extraDist = Math.max(0, scrollY - arcRef.current);\n        console.log(extraDist)\n        const xPos = radiusRef.current * Math.sin(angle * Math.PI / 180)\n        const height = backgroundRef.current.clientHeight;\n        const textOffset = -(radiusRef.current - (radiusRef.current * Math.cos(angle * Math.PI / 180)))\n\n        console.log(xPos)\n\n        rocketRef.current.style.transform = `translate(${xPos}px, 50%)rotate(${angle}deg)`\n        textRef.current.style.transform = `translateY(${textOffset - extraDist}px)`\n        pathRef.current.style.transform = `translateY(${radiusRef.current + textOffset - extraDist}px)`\n        circleRef.current.style.d = describeArc(0, backgroundRef.current.height / 2 + radiusRef.current, radiusRef.current, 0, 90);\n\n        console.log(angle)\n    }, [scrollY]);\n\n    return (\n        <svg className=\"background\" ref={backgroundRef}>\n            <g ref={textRef}>\n                <text\n                    y=\"45%\"\n                    x=\"50%\"\n                    textAnchor=\"middle\"\n                    alignmentBaseline=\"central\"\n                    fill=\"white\"\n                    fontSize=\"36\"\n                >\n                    Jonathan Carr\n                </text>\n                <text\n                    y=\"50%\"\n                    x=\"50%\"\n                    textAnchor=\"middle\"\n                    alignmentBaseline=\"central\"\n                    fill=\"white\"\n                    fontSize=\"18\"\n                >\n                    And some words about me!\n                </text>\n            </g>\n            \n\n            <rect\n                className=\"rocket\"\n                width={100}\n                height={25}\n                fill=\"white\"\n                ref={rocketRef}\n            />\n\n            <g ref={pathRef}>\n\n                <path\n                    fill=\"none\"\n                    stroke=\"white\"\n                    opacity=\"10%\"\n                    strokeWidth=\"4\"\n                    ref={circleRef}\n                />\n                <line\n                    x1=\"50%\"\n                    x2=\"50%\"\n                    y1=\"50%\"\n                    y2=\"5000px\"\n                    stroke=\"white\"\n                    opacity=\"10%\"\n                    strokeWidth=\"4\"\n                />\n            </g>\n            \n        </svg>\n    );\n};\n\nexport default Background;"]},"metadata":{},"sourceType":"module"}